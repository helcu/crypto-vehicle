/// <reference types="react" />
import * as React from "react";
import * as PropTypes from "prop-types";
import AddBlurEvent from "../common/AddBlurEvent";
import ListView from "../ListView";
export interface DataProps {
    defaultDate?: Date;
    onChangeDate?: (date?: Date) => void;
    maxYear?: number;
    minYear?: number;
    inputItemHeight?: number;
    pickerItemHeight?: number;
    background?: string;
}
export interface DatePickerProps extends DataProps, React.HTMLAttributes<HTMLDivElement> {
}
export interface DatePickerState {
    showPicker?: boolean;
    currDate?: Date;
}
export declare class DatePicker extends React.Component<DatePickerProps, DatePickerState> {
    static defaultProps: DatePickerProps;
    state: DatePickerState;
    addBlurEvent: AddBlurEvent;
    rootElm: HTMLDivElement;
    prevDate: Date;
    monthListView: ListView;
    dateListView: ListView;
    yearListView: ListView;
    monthIndex: number;
    dateIndex: number;
    yearIndex: number;
    static contextTypes: {
        theme: PropTypes.Requireable<any>;
    };
    context: {
        theme: ReactUWP.ThemeType;
    };
    componentWillReceiveProps(nextProps: DatePickerProps): void;
    addBlurEventMethod: () => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    toggleShowPicker: (showPicker?: any) => void;
    setDate: (date?: number, month?: number, year?: number) => void;
    render(): JSX.Element;
}
export default DatePicker;
