/// <reference types="react" />
import * as React from "react";
import * as PropTypes from "prop-types";
import Swipe from "../Swipe";
import Dots from "./Dots";
export interface DataProps {
    initialFocusIndex?: number;
    stopSwipe?: boolean;
    autoSwipe?: boolean;
    speed?: number;
    easy?: number;
    direction?: "vertical" | "horizontal";
    showNavigation?: boolean;
    controlledNavigation?: boolean;
    showControl?: boolean;
    supportPcDrag?: boolean;
    navigationIconSize?: number;
}
export interface FlipViewProps extends DataProps, React.HTMLAttributes<HTMLDivElement> {
}
export interface FlipViewState {
    focusSwipeIndex?: number;
    currCanAutoSwipe?: boolean;
    currShowNavigation?: boolean;
}
export declare class FlipView extends React.Component<FlipViewProps, FlipViewState> {
    static defaultProps: FlipViewProps;
    static contextTypes: {
        theme: PropTypes.Requireable<any>;
    };
    context: {
        theme: ReactUWP.ThemeType;
    };
    state: FlipViewState;
    mounted: boolean;
    rootElm: HTMLDivElement;
    swipe: Swipe;
    dots: Dots;
    swipeForward: () => void;
    swipeBackWord: () => void;
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: FlipViewProps, nextState: FlipViewState): boolean;
    handleChangeSwipe: (focusSwipeIndex: number) => void;
    toggleCanAutoSwipe: (currCanAutoSwipe?: any) => void;
    handleSwipeToIndex: (index: number) => void;
    handleMouseEnter: (e: React.MouseEvent<HTMLDivElement>) => void;
    handleMouseLeave: (e: React.MouseEvent<HTMLDivElement>) => void;
    render(): JSX.Element;
}
export default FlipView;
